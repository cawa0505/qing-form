{"version":3,"file":"qing-form.js","sources":["ng://qing-form/lib/definitions/field-types-map.ts","ng://qing-form/lib/definitions/field-type.component.ts","ng://qing-form/lib/field-types/input/input.component.ts","ng://qing-form/lib/field-types/checkbox/checkbox.component.ts","ng://qing-form/lib/field-types/base-field-map.ts","ng://qing-form/lib/field/field.component.ts","ng://qing-form/lib/field-types/field-types.module.ts","ng://qing-form/lib/services/form-builder.service.ts","ng://qing-form/lib/utils.ts","ng://qing-form/lib/form/form.component.ts","ng://qing-form/lib/qing-form.module.ts","ng://qing-form/lib/definitions/field-config.ts"],"sourcesContent":["import { Type } from '@angular/core';\r\nimport { QfFieldType } from './field-config';\r\n\r\nexport class QfFieldTypesMap {\r\n  fieldMap: { [k: string]: Type<any> };\r\n\r\n  constructor(\r\n    fieldMap: { [k: string]: Type<any> }\r\n  ) {\r\n    this.fieldMap = fieldMap;\r\n  }\r\n\r\n  fieldMapFn(type: QfFieldType): Type<any> {\r\n    return this.fieldMap[type];\r\n  }\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { QfFieldConfig } from './field-config';\r\n\r\nexport abstract class QfFieldTypeComponent {\r\n  @Input() field: QfFieldConfig;\r\n\r\n  get formControl(): AbstractControl {\r\n    return this.field.formControl;\r\n  }\r\n\r\n  get placeholder(): string {\r\n    return this.field.templateOptions ? (this.field.templateOptions.placeholder || '') : '';\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { QfFieldTypeComponent } from '../../definitions/field-type.component';\n\n@Component({\n  selector: 'qf-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent extends QfFieldTypeComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n  log(value: object[]): void {\n    console.log(value);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { QfFieldTypeComponent } from '../../definitions/field-type.component';\r\n\r\n@Component({\r\n  selector: 'qf-checkbox',\r\n  templateUrl: 'checkbox.component.html'\r\n})\r\n\r\nexport class CheckboxComponent extends QfFieldTypeComponent implements OnInit {\r\n  checkOptionsOne = [\r\n    { label: 'Apple', value: 'Apple', checked: true },\r\n    { label: 'Pear', value: 'Pear' },\r\n    { label: 'Orange', value: 'Orange' }\r\n  ];\r\n\r\n  ngOnInit() { }\r\n}","import { InputComponent } from './input/input.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\n\r\nexport const QfBaseFieldTypesMap = {\r\n  input: InputComponent,\r\n  checkbox: CheckboxComponent\r\n};\r\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Input,\n  Type,\n  ComponentRef,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\nimport { QfFieldConfig, QfFieldType } from '../definitions/field-config';\nimport { QfFieldTypesMap } from '../definitions/field-types-map';\nimport { QfBaseFieldTypesMap } from '../field-types/base-field-map';\n\n@Component({\n  selector: 'qf-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.scss']\n})\nexport class QfFieldComponent implements OnInit, OnChanges, OnDestroy {\n  fieldTypesMap: QfFieldTypesMap;\n  componentRef: ComponentRef<any>;\n\n  @Input() field: QfFieldConfig;\n\n  @ViewChild('componentContainer', { read: ViewContainerRef, static: true }) componentContainerRef: ViewContainerRef;\n\n  get label(): string {\n    return this.field.templateOptions ? this.field.templateOptions.label : '';\n  }\n\n  get componentType(): Type<any> {\n    this.fieldTypesMap = new QfFieldTypesMap(QfBaseFieldTypesMap);\n    return this.fieldTypesMap.fieldMapFn(this.field.type);\n  }\n\n  constructor(\n    private cfr: ComponentFactoryResolver\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const componentFactory = this.cfr.resolveComponentFactory(this.componentType);\n    this.componentContainerRef.clear();\n    this.componentRef = this.componentContainerRef.createComponent(componentFactory);\n    const instance = this.componentRef.instance;\n    Object.assign(instance, { field: this.field });\n    this.componentRef.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.componentRef.destroy();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n// components\r\nimport { InputComponent } from './input/input.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgZorroAntdModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ],\r\n  entryComponents: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ],\r\n  exports: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ]\r\n})\r\nexport class FieldTypesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { QfFieldConfig } from '../definitions/field-config';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QfFormBuilderService {\r\n  constructor() {}\r\n\r\n  buildForm(form: FormGroup, fields: QfFieldConfig[]): void {\r\n    fields.forEach(fieldConfig => {\r\n      this.registerControl(form, fieldConfig);\r\n    });\r\n  }\r\n\r\n  private registerControl(form: FormGroup, fieldConfig: QfFieldConfig): void {\r\n    const { key, templateOptions } = fieldConfig;\r\n    const { defaultValue, options } = templateOptions;\r\n    const control = new FormControl(defaultValue || options);\r\n    fieldConfig.formControl = control;\r\n    form.registerControl(key, control);\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport * as calculator from 'formula-calculator';\r\nimport { QfFieldConfig } from './definitions/field-config';\r\n\r\nconst FORMULA_REX = /#.+?\\$/g;\r\n\r\nexport function getFormulaTriggerKeys(formula: string, fileds: QfFieldConfig[]): string[] {\r\n  const relatedFields = [];\r\n  if (!formula.match(FORMULA_REX)) {\r\n    return [];\r\n  }\r\n  formula.match(FORMULA_REX).forEach(item => {\r\n    const [key] = item.substring(1, item.indexOf('$')).split('.');\r\n    relatedFields.push(key);\r\n  });\r\n  return relatedFields;\r\n}\r\n\r\nexport function calculateFormula(formula: string, form: FormGroup): any {\r\n  const parsedFormula = formula.replace(FORMULA_REX, item => {\r\n    const [key] = item.substring(1, item.indexOf('$')).split('.');\r\n    return form.get(key).value;\r\n  });\r\n  try {\r\n    return calculator.calculate(parsedFormula);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { QfFieldConfig } from '../definitions/field-config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { QfFormBuilderService } from '../services/form-builder.service';\r\nimport { getFormulaTriggerKeys, calculateFormula } from '../utils';\r\n\r\n@Component({\r\n  selector: 'qf-form',\r\n  templateUrl: './form.component.html'\r\n})\r\nexport class QfFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() fields: QfFieldConfig[];\r\n  @Input() form: FormGroup;\r\n\r\n  private controlChangeSubs: Subscription[] = [];\r\n  private triggerMap =  new Map<string, QfFieldConfig[]>();\r\n\r\n  constructor(\r\n    private formBuilder: QfFormBuilderService\r\n  ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.controlChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.formBuilder.buildForm(this.form, this.fields);\r\n    this.setTriggerMap();\r\n    this.trackControlChanges();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.controlChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.controlChangeSubs = [];\r\n    this.triggerMap.clear();\r\n  }\r\n\r\n  private setTriggerMap(): void {\r\n    this.fields.forEach(field => {\r\n      const { templateOptions } = field;\r\n      const { formula } = templateOptions;\r\n      if (formula) {\r\n        const triggerKeys = getFormulaTriggerKeys(formula, this.fields);\r\n        triggerKeys.forEach(key => {\r\n          if (!this.triggerMap.has(key)) {\r\n            this.triggerMap.set(key, []);\r\n          }\r\n          this.triggerMap.get(key).push(field);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private trackControlChanges(): void {\r\n    this.fields.forEach(field => {\r\n      const { formControl, key } = field;\r\n      const valueChanges = formControl.valueChanges;\r\n      this.controlChangeSubs.push(valueChanges.subscribe(value => {\r\n        if (this.triggerMap.has(key)) {\r\n          this.handleTrigger(this.triggerMap.get(key));\r\n        }\r\n      }));\r\n    });\r\n  }\r\n\r\n  private handleTrigger(targetFields: QfFieldConfig[]): void {\r\n    targetFields.forEach(field => {\r\n      const { key, templateOptions } = field;\r\n      const { valueType, formula } = templateOptions;\r\n      if (valueType === 'formula') {\r\n        const calcValue = calculateFormula(formula, this.form);\r\n        this.form.get(key).setValue(calcValue);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { QfFieldComponent } from './field/field.component';\nimport { FieldTypesModule } from './field-types/field-types.module';\nimport { QfFormComponent } from './form/form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FieldTypesModule\n  ],\n  declarations: [\n    QfFieldComponent,\n    QfFormComponent\n  ],\n  exports: [\n    QfFieldComponent,\n    QfFormComponent\n  ]\n})\nexport class QingFormModule { }\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport type QfFieldType = 'input' | 'textarea' | 'date' | 'radio' | 'checkbox';\r\n\r\nexport interface QfFieldConfig {\r\n  key: string;\r\n  type: QfFieldType;\r\n  templateOptions?: QfTemplateOptions;\r\n  formControl?: AbstractControl;\r\n  extra?: { [k: string]: any };\r\n}\r\n\r\nexport interface QfTemplateOptions {\r\n  label?: string;\r\n  placeholder?: string;\r\n  defaultValue?: any;\r\n  options?: Array<{ label: string; value: string; checked?: boolean; }>;\r\n  valueType?: 'string' | 'formula' | 'custom';\r\n  formula?: string;\r\n}\r\n"],"names":["tslib_1.__extends","calculator.calculate"],"mappings":"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"}