{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://qing-form/lib/definitions/field-types-map.ts","ng://qing-form/lib/definitions/field-type.component.ts","ng://qing-form/lib/field-types/input/input.component.ts","ng://qing-form/lib/field-types/checkbox/checkbox.component.ts","ng://qing-form/lib/field-types/base-field-map.ts","ng://qing-form/lib/field/field.component.ts","ng://qing-form/lib/field-types/field-types.module.ts","ng://qing-form/lib/services/form-builder.service.ts","ng://qing-form/lib/utils.ts","ng://qing-form/lib/form/form.component.ts","ng://qing-form/lib/qing-form.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","QfFieldTypesMap","fieldMap","fieldMapFn","type","QfFieldTypeComponent","defineProperty","field","formControl","templateOptions","placeholder","Input","InputComponent","tslib_1.__extends","ngOnInit","log","console","Component","args","selector","template","CheckboxComponent","_this","_super","apply","arguments","checkOptionsOne","label","checked","QfBaseFieldTypesMap","input","checkbox","QfFieldComponent","cfr","fieldTypesMap","ngOnChanges","changes","componentFactory","resolveComponentFactory","componentType","componentContainerRef","clear","componentRef","createComponent","instance","assign","changeDetectorRef","detectChanges","ngOnDestroy","destroy","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","static","FieldTypesModule","NgModule","imports","NgZorroAntdModule","CommonModule","ReactiveFormsModule","FormsModule","declarations","entryComponents","exports","QfFormBuilderService","buildForm","form","fields","forEach","fieldConfig","registerControl","key","defaultValue","options","control","FormControl","Injectable","providedIn","FORMULA_REX","QfFormComponent","formBuilder","controlChangeSubs","triggerMap","Map","sub","unsubscribe","setTriggerMap","trackControlChanges","formula","fileds","relatedFields","match","item","substring","indexOf","split","getFormulaTriggerKeys","has","set","get","valueChanges","subscribe","handleTrigger","targetFields","valueType","calcValue","parsedFormula","replace","calculator.calculate","calculateFormula","setValue","QingFormModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { QfFieldType } from './field-config';\r\n\r\nexport class QfFieldTypesMap {\r\n  fieldMap: { [k: string]: Type<any> };\r\n\r\n  constructor(\r\n    fieldMap: { [k: string]: Type<any> }\r\n  ) {\r\n    this.fieldMap = fieldMap;\r\n  }\r\n\r\n  fieldMapFn(type: QfFieldType): Type<any> {\r\n    return this.fieldMap[type];\r\n  }\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { QfFieldConfig } from './field-config';\r\n\r\nexport abstract class QfFieldTypeComponent {\r\n  @Input() field: QfFieldConfig;\r\n\r\n  get formControl(): AbstractControl {\r\n    return this.field.formControl;\r\n  }\r\n\r\n  get placeholder(): string {\r\n    return this.field.templateOptions ? (this.field.templateOptions.placeholder || '') : '';\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { QfFieldTypeComponent } from '../../definitions/field-type.component';\n\n@Component({\n  selector: 'qf-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent extends QfFieldTypeComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n  log(value: object[]): void {\n    console.log(value);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { QfFieldTypeComponent } from '../../definitions/field-type.component';\r\n\r\n@Component({\r\n  selector: 'qf-checkbox',\r\n  templateUrl: 'checkbox.component.html'\r\n})\r\n\r\nexport class CheckboxComponent extends QfFieldTypeComponent implements OnInit {\r\n  checkOptionsOne = [\r\n    { label: 'Apple', value: 'Apple', checked: true },\r\n    { label: 'Pear', value: 'Pear' },\r\n    { label: 'Orange', value: 'Orange' }\r\n  ];\r\n\r\n  ngOnInit() { }\r\n}","import { InputComponent } from './input/input.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\n\r\nexport const QfBaseFieldTypesMap = {\r\n  input: InputComponent,\r\n  checkbox: CheckboxComponent\r\n};\r\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Input,\n  Type,\n  ComponentRef,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\nimport { QfFieldConfig, QfFieldType } from '../definitions/field-config';\nimport { QfFieldTypesMap } from '../definitions/field-types-map';\nimport { QfBaseFieldTypesMap } from '../field-types/base-field-map';\n\n@Component({\n  selector: 'qf-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.scss']\n})\nexport class QfFieldComponent implements OnInit, OnChanges, OnDestroy {\n  fieldTypesMap: QfFieldTypesMap;\n  componentRef: ComponentRef<any>;\n\n  @Input() field: QfFieldConfig;\n\n  @ViewChild('componentContainer', { read: ViewContainerRef, static: true }) componentContainerRef: ViewContainerRef;\n\n  get label(): string {\n    return this.field.templateOptions ? this.field.templateOptions.label : '';\n  }\n\n  get componentType(): Type<any> {\n    this.fieldTypesMap = new QfFieldTypesMap(QfBaseFieldTypesMap);\n    return this.fieldTypesMap.fieldMapFn(this.field.type);\n  }\n\n  constructor(\n    private cfr: ComponentFactoryResolver\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const componentFactory = this.cfr.resolveComponentFactory(this.componentType);\n    this.componentContainerRef.clear();\n    this.componentRef = this.componentContainerRef.createComponent(componentFactory);\n    const instance = this.componentRef.instance;\n    Object.assign(instance, { field: this.field });\n    this.componentRef.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.componentRef.destroy();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n// components\r\nimport { InputComponent } from './input/input.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgZorroAntdModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ],\r\n  entryComponents: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ],\r\n  exports: [\r\n    InputComponent,\r\n    CheckboxComponent\r\n  ]\r\n})\r\nexport class FieldTypesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { QfFieldConfig } from '../definitions/field-config';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QfFormBuilderService {\r\n  constructor() {}\r\n\r\n  buildForm(form: FormGroup, fields: QfFieldConfig[]): void {\r\n    fields.forEach(fieldConfig => {\r\n      this.registerControl(form, fieldConfig);\r\n    });\r\n  }\r\n\r\n  private registerControl(form: FormGroup, fieldConfig: QfFieldConfig): void {\r\n    const { key, templateOptions } = fieldConfig;\r\n    const { defaultValue, options } = templateOptions;\r\n    const control = new FormControl(defaultValue || options);\r\n    fieldConfig.formControl = control;\r\n    form.registerControl(key, control);\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport * as calculator from 'formula-calculator';\r\nimport { QfFieldConfig } from './definitions/field-config';\r\n\r\nconst FORMULA_REX = /#.+?\\$/g;\r\n\r\nexport function getFormulaTriggerKeys(formula: string, fileds: QfFieldConfig[]): string[] {\r\n  const relatedFields = [];\r\n  if (!formula.match(FORMULA_REX)) {\r\n    return [];\r\n  }\r\n  formula.match(FORMULA_REX).forEach(item => {\r\n    const [key] = item.substring(1, item.indexOf('$')).split('.');\r\n    relatedFields.push(key);\r\n  });\r\n  return relatedFields;\r\n}\r\n\r\nexport function calculateFormula(formula: string, form: FormGroup): any {\r\n  const parsedFormula = formula.replace(FORMULA_REX, item => {\r\n    const [key] = item.substring(1, item.indexOf('$')).split('.');\r\n    return form.get(key).value;\r\n  });\r\n  try {\r\n    return calculator.calculate(parsedFormula);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { QfFieldConfig } from '../definitions/field-config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { QfFormBuilderService } from '../services/form-builder.service';\r\nimport { getFormulaTriggerKeys, calculateFormula } from '../utils';\r\n\r\n@Component({\r\n  selector: 'qf-form',\r\n  templateUrl: './form.component.html'\r\n})\r\nexport class QfFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() fields: QfFieldConfig[];\r\n  @Input() form: FormGroup;\r\n\r\n  private controlChangeSubs: Subscription[] = [];\r\n  private triggerMap =  new Map<string, QfFieldConfig[]>();\r\n\r\n  constructor(\r\n    private formBuilder: QfFormBuilderService\r\n  ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.controlChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.formBuilder.buildForm(this.form, this.fields);\r\n    this.setTriggerMap();\r\n    this.trackControlChanges();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.controlChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.controlChangeSubs = [];\r\n    this.triggerMap.clear();\r\n  }\r\n\r\n  private setTriggerMap(): void {\r\n    this.fields.forEach(field => {\r\n      const { templateOptions } = field;\r\n      const { formula } = templateOptions;\r\n      if (formula) {\r\n        const triggerKeys = getFormulaTriggerKeys(formula, this.fields);\r\n        triggerKeys.forEach(key => {\r\n          if (!this.triggerMap.has(key)) {\r\n            this.triggerMap.set(key, []);\r\n          }\r\n          this.triggerMap.get(key).push(field);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private trackControlChanges(): void {\r\n    this.fields.forEach(field => {\r\n      const { formControl, key } = field;\r\n      const valueChanges = formControl.valueChanges;\r\n      this.controlChangeSubs.push(valueChanges.subscribe(value => {\r\n        if (this.triggerMap.has(key)) {\r\n          this.handleTrigger(this.triggerMap.get(key));\r\n        }\r\n      }));\r\n    });\r\n  }\r\n\r\n  private handleTrigger(targetFields: QfFieldConfig[]): void {\r\n    targetFields.forEach(field => {\r\n      const { key, templateOptions } = field;\r\n      const { valueType, formula } = templateOptions;\r\n      if (valueType === 'formula') {\r\n        const calcValue = calculateFormula(formula, this.form);\r\n        this.form.get(key).setValue(calcValue);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { QfFieldComponent } from './field/field.component';\nimport { FieldTypesModule } from './field-types/field-types.module';\nimport { QfFormComponent } from './form/form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FieldTypesModule\n  ],\n  declarations: [\n    QfFieldComponent,\n    QfFormComponent\n  ],\n  exports: [\n    QfFieldComponent,\n    QfFormComponent\n  ]\n})\nexport class QingFormModule { }\n"]}